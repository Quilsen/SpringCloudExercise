version: '3.8'
services:
  eureka-server:
    build:
      context: ./EurekaServer
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    networks:
      - spring-cloud
    container_name: eureka-server

  api-gateway:
    build:
      context: ./Gateway
      dockerfile: Dockerfile
    ports:
      - "9090:9090"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
    networks:
      - spring-cloud
    depends_on:
      - eureka-server
    container_name: api-gateway

  external-service:
    build:
      context: ./ExternalService
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER-URI=http://keycloak2:8080/realms/master
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK-SET-URI=http://keycloak2:8080/realms/master/protocol/openid-connect/certs
      - KEYCLOAK_AUTH_SERVER_URL=http://keycloak2:8080/realms/master/protocol/openid-connect/token
      - KEYCLOAK_ADMIN_USER_URL=http://keycloak2:8080/admin/realms/master/users
    networks:
      - spring-cloud
    depends_on:
      - eureka-server
    container_name: external-service

  internal-service:
    build:
      context: ./InternalService
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
    networks:
      - spring-cloud
    depends_on:
      - eureka-server
    container_name: internal-service

  keycloak:
    image: keycloak/keycloak:25.0.4
    container_name: keycloak2
    restart: always
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      DB_VENDOR: h2
    ports:
      - "8084:8080"
    command: start-dev
    networks:
      - spring-cloud

networks:
  spring-cloud:
    driver: bridge
